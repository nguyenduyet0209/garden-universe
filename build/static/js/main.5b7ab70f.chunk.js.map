{"version":3,"sources":["context/AppProvider.jsx","utils/sesstionStorage.js","app/hook.js","utils/constants.js","app/slices/authSlice.js","web3-connect/detectProvider.js","views/components/Loading/Loading.jsx","views/pages/NoMatch/NoMatch.jsx","routes/routes.js","routes/PrivateRoute.jsx","web3-connect/deposit.js","views/components/modals/ModalDeposit.jsx","views/components/modals/ModalWithdraw.jsx","App.js","app/store.js","serviceWorker.js","index.js","views/components/NotificationCPN.jsx","app/config/axiosFetchBaseQuery.js","app/services/authApi.js"],"names":["AppContext","createContext","AppProvider","children","useState","isDepositVisible","setIsDepositVisible","isWithdrawVisible","setIsWithdrawVisible","Provider","value","setAuthToSession","accessToken","ethAddress","nonce","id","sessionStorage","setItem","getAccessTokenInSession","getItem","getEthAddressInSession","getNonceInSession","getUserIdInSession","resetSession","clear","useAppDispatch","useDispatch","useAppSelector","useSelector","API_BASE_URL","process","menuList","name","subMenu","nftSlieList","teamList","fullname","position","authSliceReducer","createSlice","initialState","userId","isConnecting","reducers","setAuth","state","payload","setIsConnecting","resetAuth","resetIsConnecting","actions","detectProvider","provider","window","ethereum","web3","currentProvider","alert","Loading","className","NoMatch","routeConfig","path","component","lazy","isProtected","PrivateRoute","location","useLocation","auth","to","from","replace","a","price","BUSDAddress","idoReceiveAddress","setIsLoading","depositWithHash","setIsSuccess","setContentSuccess","Web3","priceInt","split","busdAddress","receiveAddress","eth","Contract","BUSD","methods","transfer","utils","toWei","send","on","hash","transactionHash","resultDepositWithHash","data","success","error","console","log","ModalDeposit","useContext","isSuccess","isLoading","contentSuccess","Form","useForm","form","useEffect","setFieldsValue","handleCancel","useDepositWithHashMutation","title","visible","onOk","onCancel","maskClosable","footer","spinning","CheckOutlined","onClick","layout","onFinish","values","DepositWeb3","String","Item","label","min","allowClear","htmlType","ModalWithdraw","amount","useWithdrawMutation","withdraw","handleWithdraw","status","App","fallback","map","route","element","store","configureStore","reducer","authApi","reducerPath","middleware","getDefaultMiddleware","concat","Boolean","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","NotificationCPN","type","message","description","notification","duration","placement","baseQuery","fetchBaseQuery","baseUrl","prepareHeaders","headers","token","getState","set","baseQueryWithReauth","args","api","extraOptions","result","createApi","tagTypes","endpoints","builder","getProfile","query","pathApi","url","method","getTradeHistory","pathUrl","providesTags","mutation","body","invalidatesTags","useGetProfileQuery","useGetTradeHistoryQuery"],"mappings":"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","file":"static/js/main.5b7ab70f.chunk.js","sourcesContent":["import React, { createContext, useState } from 'react'\nimport PropTypes from 'prop-types'\n\nexport const AppContext = createContext()\n\nexport default function AppProvider({ children }) {\n  const [isDepositVisible, setIsDepositVisible] = useState(false)\n  const [isWithdrawVisible, setIsWithdrawVisible] = useState(false)\n\n  return (\n    <AppContext.Provider\n      value={{\n        isDepositVisible,\n        setIsDepositVisible,\n        isWithdrawVisible,\n        setIsWithdrawVisible,\n      }}\n    >\n      {children}\n    </AppContext.Provider>\n  )\n}\n\nAppProvider.propTypes = {\n  children: PropTypes.element,\n}\n","// GET KEY TO SESSION\nexport function setAccessTokenToSession(accessToken) {\n  sessionStorage.setItem('ACCESS_TOKEN', accessToken)\n}\n\nexport function setEthAddressToSession(ethAddress) {\n  sessionStorage.setItem('ETH_ADDRESS', ethAddress)\n}\n\nexport function setNonceToSession(nonce) {\n  sessionStorage.setItem('NONCE', nonce)\n}\n\nexport function setUserIdToSession(id) {\n  sessionStorage.setItem('USER_ID', id)\n}\n\nexport function setAuthToSession({ accessToken, ethAddress, nonce, id }) {\n  sessionStorage.setItem('ACCESS_TOKEN', accessToken)\n  sessionStorage.setItem('ETH_ADDRESS', ethAddress)\n  sessionStorage.setItem('NONCE', nonce)\n  sessionStorage.setItem('USER_ID', id)\n}\n\nexport function setSignatureToSession(signature) {\n  sessionStorage.setItem('SIGNATURE', signature)\n}\n\n// GET KEY IN SESSION\nexport function getAccessTokenInSession() {\n  return sessionStorage.getItem('ACCESS_TOKEN')\n}\n\nexport function getEthAddressInSession() {\n  return sessionStorage.getItem('ETH_ADDRESS')\n}\n\nexport function getNonceInSession() {\n  return sessionStorage.getItem('NONCE')\n}\n\nexport function getUserIdInSession() {\n  return sessionStorage.getItem('USER_ID')\n}\n\nexport function getSignatureInSession() {\n  return sessionStorage.getItem('SIGNATURE')\n}\n\nexport function resetSession() {\n  sessionStorage.clear()\n}\n","import { useDispatch, useSelector } from 'react-redux'\n\nexport const useAppDispatch = () => useDispatch()\nexport const useAppSelector = useSelector\n","export const API_BASE_URL = process.env.REACT_APP_API_BASE_URL\n// export const API_BASE_URL = 'https://api.gardenuniverse.io/'\n\nexport const menuList = [\n  {\n    id: 1,\n    name: 'story',\n  },\n  {\n    id: 2,\n    name: 'gameplay',\n  },\n  {\n    id: 3,\n    name: 'nftitems',\n  },\n  {\n    id: 4,\n    name: 'roadmap',\n  },\n  {\n    id: 5,\n    name: 'team',\n  },\n  {\n    id: 6,\n    name: 'advisor',\n  },\n  {\n    id: 7,\n    name: 'partners',\n  },\n  {\n    id: 8,\n    name: 'document',\n    subMenu: [\n      {\n        id: 1,\n        name: 'whitepaper',\n      },\n      {\n        id: 2,\n        name: 'pitchdeck',\n      },\n    ],\n  },\n]\n\nexport const nftSlieList = [\n  {\n    id: 1,\n    name: 'Item name',\n  },\n  {\n    id: 2,\n    name: 'Item name',\n  },\n]\n\nexport const teamList = [\n  {\n    id: 1,\n    fullname: 'fullname',\n    position: 'position',\n  },\n  {\n    id: 2,\n    fullname: 'fullname',\n    position: 'position',\n  },\n  {\n    id: 3,\n    fullname: 'fullname',\n    position: 'position',\n  },\n  {\n    id: 4,\n    fullname: 'fullname',\n    position: 'position',\n  },\n  {\n    id: 5,\n    fullname: 'fullname',\n    position: 'position',\n  },\n  {\n    id: 6,\n    fullname: 'fullname',\n    position: 'position',\n  },\n  {\n    id: 7,\n    fullname: 'fullname',\n    position: 'position',\n  },\n  {\n    id: 8,\n    fullname: 'fullname',\n    position: 'position',\n  },\n]\n","import { createSlice } from '@reduxjs/toolkit'\nimport {\n  getAccessTokenInSession,\n  getEthAddressInSession,\n  getNonceInSession,\n  getUserIdInSession,\n} from '../../utils/sesstionStorage'\n\nconst authSliceReducer = createSlice({\n  name: 'auth',\n  initialState: {\n    accessToken: getAccessTokenInSession() || null,\n    ethAddress: getEthAddressInSession() || null,\n    nonce: getNonceInSession() || null,\n    userId: getUserIdInSession() || null,\n    isConnecting: false,\n  },\n  reducers: {\n    setAuth: (\n      state,\n      { payload: { accessToken, ethAddress, nonce, userId } }\n    ) => {\n      state.accessToken = accessToken\n      state.ethAddress = ethAddress\n      state.nonce = nonce\n      state.userId = userId\n    },\n    setIsConnecting: (state) => {\n      state.isConnecting = true\n    },\n    resetAuth: (state) => {\n      state.accessToken = null\n      state.ethAddress = null\n      state.nonce = null\n    },\n    resetIsConnecting: (state) => {\n      state.isConnecting = false\n    },\n  },\n})\nexport const { setAuth, setIsConnecting, resetAuth, resetIsConnecting } =\n  authSliceReducer.actions\nexport default authSliceReducer.reducer\n","export default function detectProvider() {\n  let provider\n  if (window.ethereum) {\n    provider = window.ethereum\n  } else if (window.web3) {\n    provider = window.web3.currentProvider\n  } else {\n    window.alert('No Ethereum browser detected! Check out MetaMask')\n  }\n  return provider\n}\n","import './style.scss'\n\nexport function Loading() {\n  return (\n    <div className=\"loading-component\">\n      <div className=\"lds-default\">\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n        <div></div>\n      </div>\n    </div>\n  )\n}\n","import React from 'react'\n\nexport default function NoMatch() {\n  return <div>NoMatch</div>\n}\n","import { lazy } from 'react'\n\nexport const routeConfig = [\n  {\n    id: 'HomePage',\n    path: '/',\n    component: lazy(() => import('../views/pages/HomePage/HomePage')),\n    isProtected: false,\n  },\n  {\n    id: 'ProfilePage',\n    path: '/profile',\n    component: lazy(() => import('../views/pages/Profile/Profile')),\n    isProtected: true,\n  },\n]\n","import PropTypes from 'prop-types'\n\nimport { Navigate, useLocation } from 'react-router-dom'\nimport { useAppSelector } from '../app/hook'\n\nexport default function PrivateRoute({ children }) {\n  const location = useLocation()\n\n  const { accessToken } = useAppSelector((state) => state.auth)\n\n  if (!accessToken) {\n    return <Navigate to=\"/\" state={{ from: location }} replace />\n  }\n\n  return <>{children}</>\n}\n\nPrivateRoute.propTypes = {\n  children: PropTypes.element.isRequired,\n}\n","import Web3 from 'web3'\nimport BUSD from '../abis/busd.json'\n\nexport async function DepositWeb3({\n  provider,\n  ethAddress,\n  price,\n  BUSDAddress,\n  idoReceiveAddress,\n  setIsLoading,\n  depositWithHash,\n  setIsSuccess,\n  setContentSuccess,\n}) {\n  try {\n    setIsLoading(true)\n    const web3 = new Web3(provider)\n    const priceInt = price.split('.')[0]\n    const busdAddress = BUSDAddress\n      ? BUSDAddress\n      : '0x1432f7ca55175aff2755794fe79c134e4aa6aca6'\n    const receiveAddress = idoReceiveAddress\n      ? idoReceiveAddress\n      : '0x727409884a349815d15D1047FB79c27850fe005F'\n\n    const tokenInst = new web3.eth.Contract(BUSD, busdAddress)\n    tokenInst.methods\n      .transfer(receiveAddress, web3.utils.toWei(priceInt, 'ether'))\n      .send({ from: ethAddress })\n      .on('receipt', async (hash) => {\n        const resultDepositWithHash = await depositWithHash({\n          payload: { hash: hash.transactionHash },\n        })\n        if (resultDepositWithHash.data) {\n          setIsLoading(false)\n          setContentSuccess(resultDepositWithHash.data.success)\n          setIsSuccess(true)\n        }\n      })\n      .on('error', (error) => {\n        console.log(error)\n        setIsLoading(false)\n      })\n  } catch (error) {\n    console.log(error)\n    setIsLoading(false)\n  }\n}\n","import React, { useContext, useEffect, useState } from 'react'\nimport { Form, InputNumber, Modal, Spin } from 'antd'\n\nimport { AppContext } from '../../../context/AppProvider'\n\nimport './style.scss'\nimport { CheckOutlined } from '@ant-design/icons'\nimport detectProvider from '../../../web3-connect/detectProvider'\nimport { DepositWeb3 } from '../../../web3-connect/deposit'\nimport { useAppSelector } from '../../../app/hook'\nimport { useDepositWithHashMutation } from '../../../app/services/authApi'\n\nexport default function ModalDeposit() {\n  const { ethAddress } = useAppSelector((state) => state.auth)\n\n  const { isDepositVisible, setIsDepositVisible } = useContext(AppContext)\n  const [isSuccess, setIsSuccess] = useState(false)\n  const [isLoading, setIsLoading] = useState(false)\n  const [contentSuccess, setContentSuccess] = useState('')\n\n  const [form] = Form.useForm()\n  useEffect(() => {\n    form.setFieldsValue({\n      price: 100,\n    })\n  }, [form])\n\n  const handleOk = () => {\n    setIsDepositVisible(false)\n  }\n  const handleCancel = () => {\n    setIsSuccess(false)\n    setIsDepositVisible(false)\n  }\n\n  const [depositWithHash] = useDepositWithHashMutation()\n\n  const handleDeposit = (values) => {\n    const provider = detectProvider()\n    DepositWeb3({\n      provider,\n      ethAddress,\n      price: String(values?.price),\n      BUSDAddress: '',\n      idoReceiveAddress: '',\n      setIsLoading,\n      depositWithHash,\n      setIsSuccess,\n      setContentSuccess,\n    })\n  }\n\n  return (\n    <Modal\n      title=\"Deposit\"\n      visible={isDepositVisible}\n      onOk={handleOk}\n      onCancel={handleCancel}\n      maskClosable={false}\n      footer={null}\n      className=\"modal-default\"\n    >\n      <Spin spinning={isLoading}>\n        {isSuccess ? (\n          <div className=\"content-success\">\n            <div className=\"icon\">\n              <CheckOutlined />\n            </div>\n            <h3 className=\"content\">{contentSuccess}</h3>\n            <div className=\"submit-form\">\n              <button className=\"withdraw\" onClick={handleCancel}>\n                Done\n              </button>\n            </div>\n          </div>\n        ) : (\n          <Form form={form} layout=\"vertical\" onFinish={handleDeposit}>\n            <Form.Item label=\"Your token amount\" name=\"price\">\n              <InputNumber min={1} allowClear className=\"input-price\" />\n            </Form.Item>\n            <div className=\"submit-form\">\n              <button className=\"deposit\" htmlType=\"submit\">\n                Deposit\n              </button>\n            </div>\n          </Form>\n        )}\n      </Spin>\n    </Modal>\n  )\n}\n","import React, { useContext, useState, useEffect } from 'react'\nimport { Form, InputNumber, Modal, Spin } from 'antd'\nimport { CheckOutlined } from '@ant-design/icons'\n\nimport { AppContext } from '../../../context/AppProvider'\nimport { useWithdrawMutation } from '../../../app/services/authApi'\n\nimport './style.scss'\n\nexport default function ModalWithdraw() {\n  const { isWithdrawVisible, setIsWithdrawVisible } = useContext(AppContext)\n  const [isSuccess, setIsSuccess] = useState(false)\n  const [isLoading, setIsLoading] = useState(false)\n  const [contentSuccess, setContentSuccess] = useState('')\n\n  const [form] = Form.useForm()\n  useEffect(() => {\n    form.setFieldsValue({\n      amount: 100,\n    })\n  }, [form])\n\n  const handleOk = () => {\n    setIsWithdrawVisible(false)\n  }\n  const handleCancel = () => {\n    setIsWithdrawVisible(false)\n    setIsSuccess(false)\n  }\n\n  const [withdraw] = useWithdrawMutation()\n  const handleWithdraw = async (values) => {\n    try {\n      setIsLoading(true)\n      const payload = {\n        amount: values?.amount,\n      }\n      const resultWithdraw = await withdraw({ payload })\n      if (resultWithdraw.status === 200) {\n        setIsLoading(false)\n        setContentSuccess('Withdraw success')\n      } else {\n        setIsLoading(false)\n      }\n    } catch (error) {\n      console.log(error)\n      setIsLoading(false)\n    }\n  }\n\n  return (\n    <Modal\n      title=\"Withdraw\"\n      visible={isWithdrawVisible}\n      onOk={handleOk}\n      onCancel={handleCancel}\n      maskClosable={false}\n      footer={null}\n      className=\"modal-default\"\n    >\n      <Spin spinning={isLoading}>\n        {isSuccess ? (\n          <div className=\"content-success\">\n            <div className=\"icon\">\n              <CheckOutlined />\n            </div>\n            <h3 className=\"content\">{contentSuccess}</h3>\n            <div className=\"submit-form\">\n              <button className=\"withdraw\" onClick={handleCancel}>\n                Done\n              </button>\n            </div>\n          </div>\n        ) : (\n          <Form form={form} layout=\"vertical\" onFinish={handleWithdraw}>\n            <Form.Item label=\"Your token amount\" name=\"amount\">\n              <InputNumber min={100} allowClear className=\"input-price\" />\n            </Form.Item>\n            <div className=\"submit-form\">\n              <button className=\"withdraw\" htmlType=\"submit\">\n                Withdraw\n              </button>\n            </div>\n          </Form>\n        )}\n      </Spin>\n    </Modal>\n  )\n}\n","import React, { Suspense } from 'react'\nimport { Route, Routes } from 'react-router-dom'\n\nimport { Loading } from './views/components/Loading/Loading'\nimport NoMatch from './views/pages/NoMatch/NoMatch'\nimport { routeConfig } from './routes/routes'\nimport AppProvider from './context/AppProvider'\nimport PrivateRoute from './routes/PrivateRoute'\nimport ModalDeposit from './views/components/modals/ModalDeposit'\nimport ModalWithdraw from './views/components/modals/ModalWithdraw'\n\nfunction App() {\n  return (\n    <AppProvider>\n      <div className=\"wrapper\">\n        <main>\n          <Suspense fallback={<Loading />}>\n            <Routes>\n              {routeConfig.map((route) => (\n                <Route\n                  key={route.id}\n                  path={route.path}\n                  element={\n                    route.isProtected ? (\n                      <PrivateRoute>\n                        <route.component />\n                      </PrivateRoute>\n                    ) : (\n                      <route.component />\n                    )\n                  }\n                />\n              ))}\n\n              <Route path=\"*\" element={<NoMatch />} />\n            </Routes>\n          </Suspense>\n          <ModalDeposit />\n          <ModalWithdraw />\n        </main>\n      </div>\n    </AppProvider>\n  )\n}\n\nexport default App\n","import { configureStore } from '@reduxjs/toolkit'\nimport { authApi } from './services/authApi'\nimport authSliceReducer from './slices/authSlice'\n\nexport const store = configureStore({\n  reducer: {\n    [authApi.reducerPath]: authApi.reducer,\n    auth: authSliceReducer,\n  },\n\n  middleware: (getDefaultMiddleware) =>\n    getDefaultMiddleware().concat(authApi.middleware),\n})\n\n// optional, but required for refetchOnFocus/refetchOnReconnect behaviors\n// see `setupListeners` docs - takes an optional callback as the 2nd arg for customization\n// setupListeners(store.dispatch)\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then((registration) => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport { store } from './app/store'\nimport { Provider } from 'react-redux'\nimport * as serviceWorker from './serviceWorker'\nimport { BrowserRouter } from 'react-router-dom'\n\nimport 'antd/dist/antd.css'\nimport './assets/styles/main.scss'\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <BrowserRouter>\n        <App />\n      </BrowserRouter>\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById('root')\n)\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n","import { notification } from 'antd'\nexport function NotificationCPN({ type, message, description }) {\n  return notification[type]({\n    message: message,\n    description: description,\n    duration: 3,\n    placement: 'topRight',\n  })\n}\n","import { fetchBaseQuery } from '@reduxjs/toolkit/query'\n\nimport { NotificationCPN } from '../../views/components/NotificationCPN'\nimport { API_BASE_URL } from '../../utils/constants'\n\nconst baseQuery = fetchBaseQuery({\n  baseUrl: API_BASE_URL,\n\n  prepareHeaders: (headers, { getState }) => {\n    const token = getState().auth.accessToken\n    if (token) {\n      headers.set('Authorization', `Bearer ${token}`)\n    }\n    return headers\n  },\n})\n\nconst baseQueryWithReauth = async (args, api, extraOptions) => {\n  const result = await baseQuery(args, api, extraOptions)\n\n  if (result.error) {\n    switch (result.error.status) {\n      case 401:\n        // try to get a new token\n        console.log('401 authorization')\n        break\n\n      case 500:\n      case 501:\n      case 502:\n      case 503:\n        NotificationCPN({\n          type: 'error',\n          message: 'Error',\n          description: result.error.error || 'Internal Server Error',\n        })\n        break\n      case 400:\n        console.log('bad request')\n        break\n      case 422:\n        console.log('result.error', result.error)\n        NotificationCPN({\n          type: 'error',\n          message: 'Error',\n          description:\n            result.error?.data?.error || result.error?.data?.amount[0],\n        })\n        break\n      case 403:\n        console.log('Authorize')\n        break\n    }\n  }\n\n  return result\n}\n\nexport default baseQueryWithReauth\n","import { createApi } from '@reduxjs/toolkit/query/react'\nimport baseQueryWithReauth from '../config/axiosFetchBaseQuery'\n\nexport const authApi = createApi({\n  baseQuery: baseQueryWithReauth,\n  tagTypes: ['authApi'],\n  endpoints: (builder) => ({\n    getProfile: builder.query({\n      query: (pathApi) => ({\n        url: pathApi,\n        method: 'GET',\n      }),\n    }),\n    getTradeHistory: builder.query({\n      query: (pathUrl) => ({\n        url: pathUrl,\n        method: 'GET',\n      }),\n      providesTags: ['authApi'],\n    }),\n    depositWithHash: builder.mutation({\n      query: ({ payload }) => ({\n        url: '/ddapp/account/deposit',\n        method: 'POST',\n        body: payload,\n      }),\n      invalidatesTags: ['authApi'],\n    }),\n    withdraw: builder.mutation({\n      query: ({ payload }) => ({\n        url: '/ddapp/account/withdraw',\n        method: 'POST',\n        body: payload,\n      }),\n    }),\n  }),\n})\n\n// Export hooks for usage in functional components\nexport const {\n  useGetProfileQuery,\n  useGetTradeHistoryQuery,\n  useDepositWithHashMutation,\n  useWithdrawMutation,\n} = authApi\n"],"sourceRoot":""}